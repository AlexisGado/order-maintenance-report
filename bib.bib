@inproceedings{10.1145/28395.28434,
  author    = {Dietz, P. and Sleator, D.},
  title     = {Two Algorithms for Maintaining Order in a List},
  year      = {1987},
  isbn      = {0897912217},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/28395.28434},
  doi       = {10.1145/28395.28434},
  abstract  = {The order maintenance problem is that of maintaining a list under a sequence of Insert and Delete operations, while answering Order queries (determine which of two elements comes first in the list). We give two new algorithms for this problem. The first algorithm matches the O(1) amortized time per operation of the best previously known algorithm, and is much simpler. The second algorithm permits all operations to be performed in O(1) worst-case time.},
  booktitle = {Proceedings of the Nineteenth Annual ACM Symposium on Theory of Computing},
  pages     = {365–372},
  numpages  = {8},
  location  = {New York, New York, USA},
  series    = {STOC '87}
}

@inproceedings{10.5555/647912.740822,
  author    = {Bender, Michael A. and Cole, Richard and Demaine, Erik D. and Farach-Colton, Martin and Zito, Jack},
  title     = {Two Simplified Algorithms for Maintaining Order in a List},
  year      = {2002},
  isbn      = {3540441808},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  abstract  = {In the Order-Maintenance Problem, the objective is to maintain a total order subject to insertions, deletions, and precedence queries. Known optimal solutions, due to Dietz and Sleator, are complicated. We present new algorithms that match the bounds of Dietz and Sleator. Our solutions are simple, and we present experimental evidence that suggests that they are superior in practice.},
  booktitle = {Proceedings of the 10th Annual European Symposium on Algorithms},
  pages     = {152–164},
  numpages  = {13},
  series    = {ESA '02}
}

@inproceedings{10.1007/BFb0036494,
  author    = {Tsakalidis, Athanasios K.},
  editor    = {Cremers, Armin B.
               and Kriegel, Hans-Peter},
  title     = {Maintaining order in a generalized linked list},
  booktitle = {Theoretical Computer Science},
  year      = {1982},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {343--352},
  abstract  = {We give a representation for linked lists which allows to efficiently insert and delete objects in the list and to quickly determine the order of two list elements. The basic data structure, called an indexed BB[$\alpha$]-tree, allows to do n insertions and deletions in O(n log n) steps and determine the order in constant time, assuming that the locations of the elements worked at are given. The improved algorithm does n insertions, deletions and comparisons in O(n log* n) steps.},
  isbn      = {978-3-540-39421-1}
}

@inproceedings{10.1145/351240.351266,
  author    = {Claessen, Koen and Hughes, John},
  title     = {QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs},
  year      = {2000},
  isbn      = {1581132026},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/351240.351266},
  doi       = {10.1145/351240.351266},
  abstract  = {Quick Check is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffices to obtain good coverage of the definition under test.},
  booktitle = {Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming},
  pages     = {268–279},
  numpages  = {12},
  series    = {ICFP '00}
}

@article{quickcheck-paper,
  author     = {Claessen, Koen and Hughes, John},
  title      = {QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs},
  year       = {2000},
  issue_date = {Sept. 2000},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {35},
  number     = {9},
  issn       = {0362-1340},
  url        = {https://doi.org/10.1145/357766.351266},
  doi        = {10.1145/357766.351266},
  abstract   = {Quick Check is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffices to obtain good coverage of the definition under test.},
  journal    = {SIGPLAN Not.},
  pages      = {268–279},
  numpages   = {12}
}

@inproceedings{9232938,
  author    = {Edwards, Stephen A. and Hui, John},
  booktitle = {2020 Forum for Specification and Design Languages (FDL)},
  title     = {The Sparse Synchronous Model},
  year      = {2020},
  volume    = {},
  number    = {},
  pages     = {1-8},
  doi       = {10.1109/FDL50818.2020.9232938}
}

@online{order-maintenance-github,
  author  = {John Hui},
  title   = {order-maintenance Github repository},
  year    = 2023,
  url     = {https://github.com/j-hui/order-maintenance},
  urldate = {2023-12-19}
}

@online{order-maintenance-crate,
  author  = {John Hui},
  title   = {order-maintenance crates.io page},
  year    = 2023,
  url     = {https://crates.io/crates/order-maintenance},
  urldate = {2023-12-19}
}

@online{criterion-crate,
  author  = {Jorge Aparicio},
  title   = {Criterion crates.io page},
  url     = {https://crates.io/crates/criterion},
  urldate = {2023-12-19}
}

@online{flamegraph-crate,
  author  = {Ferrous Systems GmbH},
  title   = {Flamegraph crates.io page},
  url     = {https://crates.io/crates/flamegraph},
  urldate = {2023-12-19}
}

@online{quickcheck-crate,
  author  = {Andrew Gallant},
  title   = {Quickcheck crates.io page},
  url     = {https://crates.io/crates/quickcheck},
  urldate = {2023-12-19}
}

@online{slab-crate,
  author  = {Carl Lerche},
  title   = {Slab crates.io page},
  url     = {https://crates.io/crates/slab},
  urldate = {2023-12-19}
}

@online{slotmap-crate,
  author  = {Orson Peters},
  title   = {Slotmap crates.io page},
  url     = {https://crates.io/crates/slotmap},
  urldate = {2023-12-19}
}
